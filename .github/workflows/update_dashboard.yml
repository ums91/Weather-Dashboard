name: Update IoT Dashboard

on:
  schedule:
    - cron: "0 * * * *"  # Runs every hour
  workflow_dispatch:  # Manual trigger

jobs:
  update-dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run IoT Dashboard Script
        run: |
          python iot_dashboard.py
        id: run_script

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create or Switch to update-dashboard Branch
        run: |
          git checkout -B update-dashboard  # Create or switch to the update-dashboard branch

      - name: Force Update README.md
        run: |
          # Update the README to include the latest timestamp (or any other minor change)
          current_time=$(date "+%Y-%m-%d %H:%M:%S")
          sed -i "s/_Last Update Check: .*/_Last Update Check: $current_time/" README.md  # Replace timestamp in README
          
          # Stage and commit the changes to README.md
          git add README.md
          git commit -m "Update IoT Dashboard with latest data" || echo "No changes to commit"

      - name: Fetch remote branches
        run: |
          git fetch --all  # Fetch all branches from remote

      - name: Pull remote changes to update-dashboard
        run: |
          git pull origin update-dashboard --rebase  # Pull changes and rebase to keep history clean

      - name: Push changes to update-dashboard
        run: |
          git push origin update-dashboard
        env:
          GITHUB_TOKEN: ${{ secrets.WEATHER_TOKEN }}  # Use WEATHER_TOKEN for authentication

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.WEATHER_TOKEN }}  # Use WEATHER_TOKEN for authentication
          branch: update-dashboard
          base: main  # Specify the target branch as 'main'
          title: "Update IoT Dashboard"
          body: "Automated update of IoT data."
